{"ast":null,"code":"import _regeneratorRuntime from \"/Users/anugrahmasih/Desktop/Techis/projects/masih_cool_tees/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/Users/anugrahmasih/Desktop/Techis/projects/masih_cool_tees/frontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport API from \"../../API\";\nimport { addCartAction, addRecomendedCartAction, fetchCartItemsAction, increaseCartAction, decreaseCartAction } from \"./actions\";\nimport { push } from \"connected-react-router\";\nvar api = new API();\nvar CARTS_KEY = \"CARTS_KEY\";\nexport var fetchCarts = function fetchCarts() {\n  return /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dispatch) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              return _context.abrupt(\"return\", api.getCarts().then(function (carts) {\n                var subtotal = calculateSubtotal(carts);\n                dispatch(fetchCartItemsAction(carts, subtotal));\n              }).catch(function (error) {\n                alert(\"Failed to connect API: /carts/\");\n              }));\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n};\nexport var addCart = function addCart(item) {\n  return /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(dispatch, getState) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              return _context2.abrupt(\"return\", api.addCarts(item.id).then(function (addedCart) {\n                var prevCarts = getState().carts.list;\n                addedCart[\"item\"] = item;\n                prevCarts.push(addedCart);\n                var subtotal = calculateSubtotal(prevCarts);\n                dispatch(addCartAction(prevCarts, subtotal));\n              }).catch(function (error) {\n                alert(\"Failed to connect API to add cart\");\n                console.log(error);\n              }));\n\n            case 1:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x2, _x3) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n};\nexport var increaseCart = function increaseCart(cart_id) {\n  return /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(dispatch, getState) {\n      var prevCarts, matchedCarts, nextSelectedCount;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              prevCarts = getState().carts.list;\n              matchedCarts = prevCarts.filter(function (cart) {\n                return cart.id === cart_id;\n              });\n              nextSelectedCount = matchedCarts[0].quantity + 1;\n              return _context3.abrupt(\"return\", api.updateCarts(cart_id, nextSelectedCount).then(function (updatedCart) {\n                prevCarts = prevCarts.filter(function (cart) {\n                  return cart.id !== cart_id;\n                });\n                prevCarts.push(updatedCart);\n                var subtotal = calculateSubtotal(prevCarts);\n                dispatch(increaseCartAction(prevCarts, subtotal));\n              }).catch(function (error) {\n                alert(\"Failed to connect API to increase cart's quantity\");\n                console.log(error);\n              }));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x4, _x5) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n};\nexport var decreaseCart = function decreaseCart(cart_id) {\n  return /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(dispatch, getState) {\n      var prevCarts, matchedCarts, nextSelectedCount;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              prevCarts = getState().carts.list;\n              matchedCarts = prevCarts.filter(function (cart) {\n                return cart.id === cart_id;\n              });\n              nextSelectedCount = matchedCarts[0].quantity - 1;\n\n              if (!(nextSelectedCount > 0)) {\n                _context4.next = 7;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", api.updateCarts(cart_id, nextSelectedCount).then(function (updatedCart) {\n                prevCarts = prevCarts.filter(function (cart) {\n                  return cart.id !== cart_id;\n                });\n                prevCarts.push(updatedCart);\n                var subtotal = calculateSubtotal(prevCarts);\n                dispatch(decreaseCartAction(prevCarts, subtotal));\n              }).catch(function (error) {\n                alert(\"Failed to connect API to decrease cart's quantity\");\n                console.log(error);\n              }));\n\n            case 7:\n              return _context4.abrupt(\"return\", api.deleteCarts(cart_id).then(function (deletedCarts) {\n                prevCarts = prevCarts.filter(function (cart) {\n                  return cart.id !== cart_id;\n                });\n                var subtotal = calculateSubtotal(prevCarts);\n                dispatch(decreaseCartAction(prevCarts, subtotal));\n              }).catch(function (error) {\n                alert(\"Failed to connect API to decrease cart's quantity\");\n                console.log(error);\n              }));\n\n            case 8:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x6, _x7) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n};\n\nvar calculateSubtotal = function calculateSubtotal(carts) {\n  var subtotal = 0;\n\n  for (var key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n\n  return subtotal;\n};","map":{"version":3,"sources":["/Users/anugrahmasih/Desktop/Techis/projects/masih_cool_tees/frontend/src/reducks/carts/operations.js"],"names":["API","addCartAction","addRecomendedCartAction","fetchCartItemsAction","increaseCartAction","decreaseCartAction","push","api","CARTS_KEY","fetchCarts","dispatch","getCarts","then","carts","subtotal","calculateSubtotal","catch","error","alert","addCart","item","getState","addCarts","id","addedCart","prevCarts","list","console","log","increaseCart","cart_id","matchedCarts","filter","cart","nextSelectedCount","quantity","updateCarts","updatedCart","decreaseCart","deleteCarts","deletedCarts","key","Number","price"],"mappings":";;AAAA,OAAOA,GAAP,MAAgB,WAAhB;AACA,SACEC,aADF,EAEEC,uBAFF,EAGEC,oBAHF,EAIEC,kBAJF,EAKEC,kBALF,QAMO,WANP;AAOA,SAASC,IAAT,QAAqB,wBAArB;AAEA,IAAMC,GAAG,GAAG,IAAIP,GAAJ,EAAZ;AACA,IAAMQ,SAAS,GAAG,WAAlB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AAC9B;AAAA,wEAAO,iBAAOC,QAAP;AAAA;AAAA;AAAA;AAAA;AAAA,+CACEH,GAAG,CACPI,QADI,GAEJC,IAFI,CAEC,UAACC,KAAD,EAAW;AACf,oBAAMC,QAAQ,GAAGC,iBAAiB,CAACF,KAAD,CAAlC;AACAH,gBAAAA,QAAQ,CAACP,oBAAoB,CAACU,KAAD,EAAQC,QAAR,CAArB,CAAR;AACD,eALI,EAMJE,KANI,CAME,UAACC,KAAD,EAAW;AAChBC,gBAAAA,KAAK,CAAC,gCAAD,CAAL;AACD,eARI,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAWD,CAZM;AAcP,OAAO,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,IAAD,EAAU;AAC/B;AAAA,yEAAO,kBAAOV,QAAP,EAAiBW,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA,gDACEd,GAAG,CACPe,QADI,CACKF,IAAI,CAACG,EADV,EAEJX,IAFI,CAEC,UAACY,SAAD,EAAe;AACnB,oBAAIC,SAAS,GAAGJ,QAAQ,GAAGR,KAAX,CAAiBa,IAAjC;AACAF,gBAAAA,SAAS,CAAC,MAAD,CAAT,GAAoBJ,IAApB;AACAK,gBAAAA,SAAS,CAACnB,IAAV,CAAekB,SAAf;AACA,oBAAMV,QAAQ,GAAGC,iBAAiB,CAACU,SAAD,CAAlC;AACAf,gBAAAA,QAAQ,CAACT,aAAa,CAACwB,SAAD,EAAYX,QAAZ,CAAd,CAAR;AACD,eARI,EASJE,KATI,CASE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,KAAK,CAAC,mCAAD,CAAL;AACAS,gBAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,eAZI,CADF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAeD,CAhBM;AAkBP,OAAO,IAAMY,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AACvC;AAAA,yEAAO,kBAAOpB,QAAP,EAAiBW,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDI,cAAAA,SADC,GACWJ,QAAQ,GAAGR,KAAX,CAAiBa,IAD5B;AAEDK,cAAAA,YAFC,GAEcN,SAAS,CAACO,MAAV,CAAiB,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAACV,EAAL,KAAYO,OAAtB;AAAA,eAAjB,CAFd;AAGDI,cAAAA,iBAHC,GAGmBH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,QAAhB,GAA2B,CAH9C;AAAA,gDAIE5B,GAAG,CACP6B,WADI,CACQN,OADR,EACiBI,iBADjB,EAEJtB,IAFI,CAEC,UAACyB,WAAD,EAAiB;AACrBZ,gBAAAA,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiB,UAACC,IAAD;AAAA,yBAAUA,IAAI,CAACV,EAAL,KAAYO,OAAtB;AAAA,iBAAjB,CAAZ;AACAL,gBAAAA,SAAS,CAACnB,IAAV,CAAe+B,WAAf;AACA,oBAAMvB,QAAQ,GAAGC,iBAAiB,CAACU,SAAD,CAAlC;AACAf,gBAAAA,QAAQ,CAACN,kBAAkB,CAACqB,SAAD,EAAYX,QAAZ,CAAnB,CAAR;AACD,eAPI,EAQJE,KARI,CAQE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,KAAK,CAAC,mDAAD,CAAL;AACAS,gBAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,eAXI,CAJF;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiBD,CAlBM;AAoBP,OAAO,IAAMqB,YAAY,GAAG,SAAfA,YAAe,CAACR,OAAD,EAAa;AACvC;AAAA,yEAAO,kBAAOpB,QAAP,EAAiBW,QAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AACDI,cAAAA,SADC,GACWJ,QAAQ,GAAGR,KAAX,CAAiBa,IAD5B;AAEDK,cAAAA,YAFC,GAEcN,SAAS,CAACO,MAAV,CAAiB,UAACC,IAAD;AAAA,uBAAUA,IAAI,CAACV,EAAL,KAAYO,OAAtB;AAAA,eAAjB,CAFd;AAGDI,cAAAA,iBAHC,GAGmBH,YAAY,CAAC,CAAD,CAAZ,CAAgBI,QAAhB,GAA2B,CAH9C;;AAAA,oBAIDD,iBAAiB,GAAG,CAJnB;AAAA;AAAA;AAAA;;AAAA,gDAMI3B,GAAG,CACP6B,WADI,CACQN,OADR,EACiBI,iBADjB,EAEJtB,IAFI,CAEC,UAACyB,WAAD,EAAiB;AACrBZ,gBAAAA,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiB,UAACC,IAAD;AAAA,yBAAUA,IAAI,CAACV,EAAL,KAAYO,OAAtB;AAAA,iBAAjB,CAAZ;AACAL,gBAAAA,SAAS,CAACnB,IAAV,CAAe+B,WAAf;AACA,oBAAMvB,QAAQ,GAAGC,iBAAiB,CAACU,SAAD,CAAlC;AACAf,gBAAAA,QAAQ,CAACL,kBAAkB,CAACoB,SAAD,EAAYX,QAAZ,CAAnB,CAAR;AACD,eAPI,EAQJE,KARI,CAQE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,KAAK,CAAC,mDAAD,CAAL;AACAS,gBAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,eAXI,CANJ;;AAAA;AAAA,gDAoBIV,GAAG,CACPgC,WADI,CACQT,OADR,EAEJlB,IAFI,CAEC,UAAC4B,YAAD,EAAkB;AACtBf,gBAAAA,SAAS,GAAGA,SAAS,CAACO,MAAV,CAAiB,UAACC,IAAD;AAAA,yBAAUA,IAAI,CAACV,EAAL,KAAYO,OAAtB;AAAA,iBAAjB,CAAZ;AACA,oBAAMhB,QAAQ,GAAGC,iBAAiB,CAACU,SAAD,CAAlC;AACAf,gBAAAA,QAAQ,CAACL,kBAAkB,CAACoB,SAAD,EAAYX,QAAZ,CAAnB,CAAR;AACD,eANI,EAOJE,KAPI,CAOE,UAACC,KAAD,EAAW;AAChBC,gBAAAA,KAAK,CAAC,mDAAD,CAAL;AACAS,gBAAAA,OAAO,CAACC,GAAR,CAAYX,KAAZ;AACD,eAVI,CApBJ;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAP;;AAAA;AAAA;AAAA;AAAA;AAiCD,CAlCM;;AAmCP,IAAMF,iBAAiB,GAAG,SAApBA,iBAAoB,CAACF,KAAD,EAAW;AACnC,MAAIC,QAAQ,GAAG,CAAf;;AACA,OAAK,IAAI2B,GAAT,IAAgB5B,KAAhB,EAAuB;AACrBC,IAAAA,QAAQ,IAAI4B,MAAM,CAAC7B,KAAK,CAAC4B,GAAD,CAAL,CAAWrB,IAAX,CAAgBuB,KAAjB,CAAN,GAAgC9B,KAAK,CAAC4B,GAAD,CAAL,CAAWN,QAAvD;AACD;;AACD,SAAOrB,QAAP;AACD,CAND","sourcesContent":["import API from \"../../API\";\nimport {\n  addCartAction,\n  addRecomendedCartAction,\n  fetchCartItemsAction,\n  increaseCartAction,\n  decreaseCartAction,\n} from \"./actions\";\nimport { push } from \"connected-react-router\";\n\nconst api = new API();\nconst CARTS_KEY = \"CARTS_KEY\";\n\nexport const fetchCarts = () => {\n  return async (dispatch) => {\n    return api\n      .getCarts()\n      .then((carts) => {\n        const subtotal = calculateSubtotal(carts);\n        dispatch(fetchCartItemsAction(carts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API: /carts/\");\n      });\n  };\n};\n\nexport const addCart = (item) => {\n  return async (dispatch, getState) => {\n    return api\n      .addCarts(item.id)\n      .then((addedCart) => {\n        let prevCarts = getState().carts.list;\n        addedCart[\"item\"] = item;\n        prevCarts.push(addedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(addCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to add cart\");\n        console.log(error);\n      });\n  };\n};\n\nexport const increaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity + 1;\n    return api\n      .updateCarts(cart_id, nextSelectedCount)\n      .then((updatedCart) => {\n        prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n        prevCarts.push(updatedCart);\n        const subtotal = calculateSubtotal(prevCarts);\n        dispatch(increaseCartAction(prevCarts, subtotal));\n      })\n      .catch((error) => {\n        alert(\"Failed to connect API to increase cart's quantity\");\n        console.log(error);\n      });\n  };\n};\n\nexport const decreaseCart = (cart_id) => {\n  return async (dispatch, getState) => {\n    let prevCarts = getState().carts.list;\n    let matchedCarts = prevCarts.filter((cart) => cart.id === cart_id);\n    let nextSelectedCount = matchedCarts[0].quantity - 1;\n    if (nextSelectedCount > 0) {\n      // if quantity is more than 0, update\n      return api\n        .updateCarts(cart_id, nextSelectedCount)\n        .then((updatedCart) => {\n          prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n          prevCarts.push(updatedCart);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    } else {\n      // if quantity is 0, delete\n      return api\n        .deleteCarts(cart_id)\n        .then((deletedCarts) => {\n          prevCarts = prevCarts.filter((cart) => cart.id !== cart_id);\n          const subtotal = calculateSubtotal(prevCarts);\n          dispatch(decreaseCartAction(prevCarts, subtotal));\n        })\n        .catch((error) => {\n          alert(\"Failed to connect API to decrease cart's quantity\");\n          console.log(error);\n        });\n    }\n  };\n};\nconst calculateSubtotal = (carts) => {\n  let subtotal = 0;\n  for (let key in carts) {\n    subtotal += Number(carts[key].item.price) * carts[key].quantity;\n  }\n  return subtotal;\n};\n"]},"metadata":{},"sourceType":"module"}